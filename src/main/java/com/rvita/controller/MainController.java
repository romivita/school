package com.rvita.controller;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

import com.rvita.model.School;
import com.rvita.model.Student;
import com.rvita.repository.SchoolRepository;
import com.rvita.repository.StudentRepository;

@Controller // This means that this class is a Controller
@RequestMapping(path = "/school") // This means URL's start with /demo (after Application path)
public class MainController {
	@Autowired // This means to get the bean called studentRepository
				// Which is auto-generated by Spring, we will use it to handle the data
	private StudentRepository studentRepository;
	private SchoolRepository schoolRepository;

	@GetMapping(path = "/add") // Map ONLY GET Requests
	public @ResponseBody String addNewSchool(@RequestParam String name) {
		// @ResponseBody means the returned String is the response, not a view name
		// @RequestParam means it is a parameter from the GET or POST request

		School school = new School();
		school.setName(name);
		schoolRepository.save(school);
		return "Saved";
	}

	@GetMapping(path = "/all")
	public @ResponseBody Iterable<School> getAllSchools() {
		// This returns a JSON or XML with the students
		return schoolRepository.findAll();
	}

	@GetMapping(path = "/student/add") // Map ONLY GET Requests
	public @ResponseBody String addNewStudent(@RequestParam String firstName, @RequestParam String lastName,
			@RequestParam Long du) {
		// @ResponseBody means the returned String is the response, not a view name
		// @RequestParam means it is a parameter from the GET or POST request

		Student student = new Student();
		student.setDu(du);
		student.setFirstName(firstName);
		student.setLastName(lastName);
		studentRepository.save(student);
		return "Saved";
	}

	@GetMapping(path = "/student/all")
	public @ResponseBody Iterable<Student> getAllStudents() {
		// This returns a JSON or XML with the students
		return studentRepository.findAll();
	}
}
